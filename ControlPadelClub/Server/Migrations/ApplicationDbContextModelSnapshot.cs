// <auto-generated />
using System;
using ControlPadelClub.Server.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControlPadelClub.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ControlPadelClub.Shared.Entities.JugadorInvitado", b =>
                {
                    b.Property<int>("JugadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JugadorId"), 1L, 1);

                    b.Property<string>("Nick")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(2);

                    b.Property<decimal?>("Nivel")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(3);

                    b.Property<int>("ReservaId")
                        .HasColumnType("int");

                    b.HasKey("JugadorId");

                    b.HasIndex("ReservaId");

                    b.ToTable("JugadorInvitado");
                });

            modelBuilder.Entity("ControlPadelClub.Shared.Entities.Pago", b =>
                {
                    b.Property<int>("PagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagoId"), 1L, 1);

                    b.Property<float>("CantidadPago")
                        .HasColumnType("real");

                    b.Property<string>("FormaPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PagoRealizado")
                        .HasColumnType("bit");

                    b.Property<int>("ReservaId")
                        .HasColumnType("int");

                    b.HasKey("PagoId");

                    b.HasIndex("ReservaId")
                        .IsUnique();

                    b.ToTable("Pago");
                });

            modelBuilder.Entity("ControlPadelClub.Shared.Entities.Partida", b =>
                {
                    b.Property<int>("PartidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartidaId"), 1L, 1);

                    b.Property<string>("Marcador")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PartidaId");

                    b.ToTable("Partida");
                });

            modelBuilder.Entity("ControlPadelClub.Shared.Entities.PerfilOptions", b =>
                {
                    b.Property<int>("PerfilOptionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PerfilOptionsId"), 1L, 1);

                    b.Property<bool>("HabilidadesActivas")
                        .HasColumnType("bit");

                    b.Property<int>("JugadorId")
                        .HasColumnType("int");

                    b.Property<bool>("Publico")
                        .HasColumnType("bit");

                    b.HasKey("PerfilOptionsId");

                    b.HasIndex("JugadorId")
                        .IsUnique();

                    b.ToTable("PerfilOptions");
                });

            modelBuilder.Entity("ControlPadelClub.Shared.Entities.Pista", b =>
                {
                    b.Property<int>("PistaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PistaId"), 1L, 1);

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("PistaId");

                    b.ToTable("Pista");
                });

            modelBuilder.Entity("ControlPadelClub.Shared.Entities.Reserva", b =>
                {
                    b.Property<int>("ReservaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservaId"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraInicio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("JugadorId")
                        .HasColumnType("int");

                    b.Property<int?>("PartidaId")
                        .HasColumnType("int");

                    b.Property<int?>("PistaId")
                        .HasColumnType("int");

                    b.Property<float>("Precio")
                        .HasColumnType("real");

                    b.HasKey("ReservaId");

                    b.HasIndex("JugadorId");

                    b.HasIndex("PartidaId");

                    b.HasIndex("PistaId");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("ControlPadelClub.Shared.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("RolName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("ControlPadelClub.Shared.Entities.UsuarioRegistrado", b =>
                {
                    b.Property<int>("JugadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JugadorId"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Foto_src")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManoHabil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nick")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(2);

                    b.Property<decimal?>("Nivel")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(3);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Posicion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoNivel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JugadorId");

                    b.HasIndex("RoleId");

                    b.ToTable("UsuarioRegistrado");
                });

            modelBuilder.Entity("ControlPadelClub.Shared.Entities.JugadorInvitado", b =>
                {
                    b.HasOne("ControlPadelClub.Shared.Entities.Reserva", "Reserva")
                        .WithMany("JugadoresInvitados")
                        .HasForeignKey("ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("ControlPadelClub.Shared.Entities.Pago", b =>
                {
                    b.HasOne("ControlPadelClub.Shared.Entities.Reserva", "Reserva")
                        .WithOne("Pago")
                        .HasForeignKey("ControlPadelClub.Shared.Entities.Pago", "ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("ControlPadelClub.Shared.Entities.PerfilOptions", b =>
                {
                    b.HasOne("ControlPadelClub.Shared.Entities.UsuarioRegistrado", "User")
                        .WithOne("PerfilOptions")
                        .HasForeignKey("ControlPadelClub.Shared.Entities.PerfilOptions", "JugadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ControlPadelClub.Shared.Entities.Reserva", b =>
                {
                    b.HasOne("ControlPadelClub.Shared.Entities.UsuarioRegistrado", "User")
                        .WithMany("Reservas")
                        .HasForeignKey("JugadorId");

                    b.HasOne("ControlPadelClub.Shared.Entities.Partida", "Partida")
                        .WithMany("Reservas")
                        .HasForeignKey("PartidaId");

                    b.HasOne("ControlPadelClub.Shared.Entities.Pista", "Pista")
                        .WithMany("Reservas")
                        .HasForeignKey("PistaId");

                    b.Navigation("Partida");

                    b.Navigation("Pista");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ControlPadelClub.Shared.Entities.UsuarioRegistrado", b =>
                {
                    b.HasOne("ControlPadelClub.Shared.Entities.Role", "Rol")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ControlPadelClub.Shared.Entities.Partida", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("ControlPadelClub.Shared.Entities.Pista", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("ControlPadelClub.Shared.Entities.Reserva", b =>
                {
                    b.Navigation("JugadoresInvitados");

                    b.Navigation("Pago");
                });

            modelBuilder.Entity("ControlPadelClub.Shared.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ControlPadelClub.Shared.Entities.UsuarioRegistrado", b =>
                {
                    b.Navigation("PerfilOptions");

                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
